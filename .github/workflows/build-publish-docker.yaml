name: Publish Docker image

on:
  push:
    branches: [ main ]
    paths:
      - 'playground/workshop-ui/**'
  workflow_dispatch:

jobs:
  tests:
    name: Run unit tests and publish reports
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    defaults:
      run:
        working-directory: playground/workshop-ui
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Run Jest with coverage
        run: |
          npm test -- --ci --coverage --reporters=default --reporters=github-actions || npm test -- --ci --coverage

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            playground/workshop-ui/coverage/**
            playground/workshop-ui/coverage/lcov.info
          if-no-files-found: warn

      - name: Generate coverage summary
        if: always()
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: playground/workshop-ui/coverage/lcov.info
          badge: true
          format: markdown
          output: both

      - name: Append coverage summary to job summary
        if: always()
        working-directory: .
        run: |
          if [ -f code-coverage-results.md ]; then
            cat code-coverage-results.md >> "$GITHUB_STEP_SUMMARY"
          fi

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        working-directory: playground/workshop-ui
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
          echo "STORAGE_ACCOUNT=${{ secrets.STORAGE_ACCOUNT }}" >> .env
          echo "STORAGE_ACCOUNT_KEY=${{ secrets.STORAGE_ACCOUNT_KEY }}" >> .env

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: playground/workshop-ui
          push: true
          tags: rstropek/coderdojo-ai-workshop:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/rstropek/coderdojo-ai-workshop
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
